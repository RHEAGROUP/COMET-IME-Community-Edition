image: Visual Studio 2019
environment:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  PROJECT_MAIN:   'CDP4-CE'
  TEST_RESULT:    'TestResult.xml'
  TEST_COVERAGE:  'CoverResults.xml'

skip_branch_with_pr: true
for:
# configuration for "master" branch, build in Release mode
-
  branches:
    only:
      - master
  configuration: Release
# configuration for "development" branch, build in Debug mode
-
  branches:
    only:
      - development
  configuration: Debug
# "fall back" configuration for all other branches
# no "branches" section defined
configuration: Debug

install:
  - choco install opencover.portable --version=4.7.1221
  - choco install "sonarscanner-msbuild-net46" -y --version=5.2.1.31210

before_build:
  - cmd: nuget install NUnit.Console -Version 3.12.0 -OutputDirectory testrunner
  - cmd: nuget install NUnit.Runners -Version 3.12.0 -OutputDirectory testrunner
  - cmd: nuget sources add -name devexpress -source %DEVEXPRESS_API%
  - cmd: nuget sources add -name github -source https://nuget.pkg.github.com/RHEAGROUP/index.json -username %GITHUB_USER% -password %GITHUB_TOKEN% -StorePasswordInClearText
  - cmd: nuget restore -verbosity quiet
  - cmd: set "JAVA_HOME=C:\Program Files\Java\jdk11"
  - cmd: set "PATH=C:\Program Files\Java\jdk11\bin;%PATH%"
  - cmd: java -version
  - ps: >-
      if ($env:APPVEYOR_PULL_REQUEST_NUMBER) {
        Write-Host Sonar Scanning PR# $env:APPVEYOR_PULL_REQUEST_NUMBER
        SonarScanner.MSBuild.exe begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url=$env:SONARCLOUD_URL /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.pullrequest.key=$env:APPVEYOR_PULL_REQUEST_NUMBER /d:sonar.pullrequest.provider=GitHub /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
      } elseif ($env:APPVEYOR_REPO_BRANCH -eq "development") {
        Write-Host Sonar Scanning branch $env:APPVEYOR_REPO_BRANCH
        SonarScanner.MSBuild.exe begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url=$env:SONARCLOUD_URL /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.branch.name=$env:APPVEYOR_REPO_BRANCH /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
      } elseif ($env:APPVEYOR_REPO_BRANCH -eq "master") {
        Write-Host Sonar Scanning branch $env:APPVEYOR_REPO_BRANCH
        SonarScanner.MSBuild.exe begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url=$env:SONARCLOUD_URL /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.branch.name=$env:APPVEYOR_REPO_BRANCH /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
      } else {
        Write-Host Skipping Sonar Scanning
      }

build:
  project: '%PROJECT_MAIN%.sln'
  verbosity: minimal

test_script:
    - >
      OpenCover.Console.exe
      -log:Error
      -register
      -target:".\testrunner\NUnit.ConsoleRunner.3.12.0\tools\nunit3-console.exe"
      -targetargs:"cdp4ime-tests.nunit --where=""cat!=WebServicesDependent && cat!=AppVeyorExclusion && cat!=OfficeDependent"" --config=%CONFIGURATION%"
      -returntargetcode
      -hideskipped:All
      -output:"%TEST_COVERAGE%"
      -filter:"+[CDP4*]* -[*.Tests*]* -[*.Views]*"
      -excludebyattribute:*.ExcludeFromCodeCoverageAttribute
after_test:
    - ps: >-
        if ($env:APPVEYOR_PULL_REQUEST_NUMBER -Or $env:APPVEYOR_REPO_BRANCH -eq "development" -Or $env:APPVEYOR_REPO_BRANCH -eq "master") {
          SonarScanner.MSBuild.exe end /d:"sonar.login=$env:SONARCLOUD_TOKEN"
        }
